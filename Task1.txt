Task1
Loops:
class Solution(object):
    def findLengthOfLCIS(self, nums):
        current = 1
        length = 1
        for i in range(len(nums) - 1):
            if nums[i] < nums[i + 1]:
                current += 1
            else:
                current = 1  
            if current > length:
                length = current
        
        return length
Arrays:
class Solution(object):
    def merge(self, nums1, m, nums2, n):
        i = m - 1
        j = n - 1
        k = m + n - 1
        while j >= 0:
            if i >= 0 and nums1[i] > nums2[j]:
                nums1[k] = nums1[i]
                k = k - 1
                i = i - 1
            else:
                nums1[k] = nums2[j]
                k = k - 1
                j = j - 1
Sets:
class Solution(object):
    def intersection(self, nums1, nums2):
        seen = {}
        for i in nums1:
            seen[i] = 1 
        res = set()
        for i in nums2:
            if i in seen:
                res.add(i)
        return list(res) 
        